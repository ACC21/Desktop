<project name="docear_remote_shared" default="test" basedir=".." xmlns:ivy="antlib:org.apache.ivy.ant">
	<property name="workspace" location=".." />
	<property name="root" value="." />
	<property name="src" value="${root}/src/tests" />
	<property name="resources" value="${root}/resources" />
	<property name="osgimanifest" value="${root}/META-INF/MANIFEST.MF" />
	<property file="${workspace}/freeplane_framework/ant/ant.properties" />
	<property file="${workspace}/freeplane/ant/ant.properties" />
	<property file="ant/ant.properties" />
	<property name="build" value="${root}/build" />
	<property name="lib" value="${root}/lib" />
	<property name="dist" value="${root}/dist" />
	<property name="dist.osgi.dir" value="${dist}/org.freeplane.plugin.remote_shared" />
	<property name="freeplaneplugin.jar" value="${dist}/org.freeplane.plugin.remote_shared.jar" />
	<property name="debug" value="on" />
	<property name="java_source_version" value="1.5" />
	<property name="java_target_version" value="1.5" />
	<property name="build.compiler" value="modern" />
	<property name="classpath" value="${framework.jar}:${freeplane.jars}:${services.jar}:${core.jar}:${workspace.jar}:${dependencies.jars}:${remote_shared-libs}" />
	<property name="ivy.jar.dir" value="${basedir}/ivy" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
	<property name="build.dir" value="build" />
	<property name="src.dir" value="src" />
	<property name="JOrtho_0.4_freeplane.location" value="${root}/../JOrtho_0.4_freeplane" />
	<property name="freeplane.location" value="${root}/../freeplane" />
	<property name="freeplane_plugin_remote_server.location" value="${root}/../freeplane_plugin_remote_server" />
	<property name="freeplane_plugin_remote_shared.location" value="${root}/../freeplane_plugin_remote_shared" />
	<property name="report.dir" value="${root}/report" />
	
	<!-- BEGIN PATH-->
	<path id="JOrtho_0.4_freeplane.classpath">
		<pathelement location="${JOrtho_0.4_freeplane.location}/bin" />
	</path>
	
	<path id="freeplane.classpath">
		<fileset dir="${freeplane.location}/lib/" includes="**.jar"/>
		<pathelement location="${freeplane.location}/bin/classes" />
		<path refid="JOrtho_0.4_freeplane.classpath" />
	</path>
	
	<path id="freeplane_plugin_remote_server.classpath">
		<pathelement location="${freeplane_plugin_remote_server.location}/ivy/ivy.jar" />
		<fileset dir="${freeplane_plugin_remote_server.location}/lib/" includes="**.jar"/>
		<path refid="freeplane.classpath" />
	</path>

	<path id="freeplane_plugin_remote_shared.classpath">
		<pathelement location="ivy/ivy.jar" />
		<fileset dir="${freeplane_plugin_remote_shared.location}/lib/" includes="**.jar" />
		<path refid="freeplane.classpath" />
	</path>
	
	<path id="freeplane_plugin_remote_server_tests.classpath">
		<pathelement location="${root}/resources" />
		<pathelement location="${root}/build" />
		<pathelement location="${root}/src" />
		<pathelement location="ivy/ivy.jar" />
		<fileset dir="${root}/lib/" includes="**.jar"/>
		<path refid="freeplane.classpath" />
		<path refid="freeplane_plugin_remote_shared.classpath" />
		<path refid="freeplane_plugin_remote_server.classpath" />
	</path>
	<!-- END PATH -->


	<target name="install-ivy" description="adds ivy ant module to ant">
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>

	<target name="resolve" description="retrieve dependencies with ivy" depends="install-ivy">
		<ivy:retrieve />
	</target>
	
	<target name="lib_fileset" depends="resolve">
		<fileset id="resolved_jars" dir="lib">
			<include name="*.jar" />
		</fileset>
		<pathconvert pathsep=",${line.separator} " property="resolved.jars.path" refid="resolved_jars">
			<map from="${basedir}/" to="" />
		</pathconvert>
        <echo message="resolved"></echo>
	</target>
	
	<target name="build" depends="lib_fileset">
		<mkdir dir="${build}" />
		<javac debug="true" destdir="${build}" includeantruntime="false">
			<src path="src/tests" />
			<src path="resources" />
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${freeplane_plugin_remote_shared.location}/lib">
					<include name="freeplane_remote_shared.jar" />
				</fileset>
				<pathelement path="${classpath}/" />
			</classpath>
		</javac>
		
	</target>

	<target name="dist" depends="build">
		<jar jarfile="lib/freeplane_remote_shared.jar">
			<fileset dir="${build}" />
			<fileset dir="${resources}" />
			<fileset dir="${src}">
				<include name="**/*.xml" />
				<include name="**/*.properties" />
				<include name="**/*.txt" />
			</fileset>
		</jar>
		<delete dir="${dist.osgi.dir}" quiet="true" />
		<mkdir dir="${dist.osgi.dir}" />
		<copy todir="${dist.osgi.dir}">
			<fileset dir="${root}">
				<include name="lib/**" />
			</fileset>
		</copy>
	</target>

	<target name="osgi_dist_as_jar" depends="dist">
		<jar jarfile="${freeplaneplugin.jar}">
			<fileset dir="${dist.osgi.dir}">
				<include name="**" />
			</fileset>
		</jar>
	</target>

	<target name="clean">
		<delete dir="${build}" quiet="true" />
		<delete dir="${dist}" quiet="true" />
		<delete dir="${lib}" quiet="true" />
		<delete>
			<fileset defaultexcludes="no" dir="${src}" includes="**/*~" />
		</delete>
	</target>

	<target name="test-only" depends="build">
		<mkdir dir="${report.dir}" />
		<junit fork="yes" printsummary="yes" haltonerror="no" haltonfailure="no" showoutput="yes" failureproperty="junit.failure">
			<test name="tests.AkkaTests" todir="${report.dir}"/>
			<formatter type="xml"/>
			<classpath refid="freeplane_plugin_remote_server_tests.classpath" />
		</junit>
		<fail if="junit.failure" message="Unit test(s) failed.  See reports!"/>
	</target>
	
	
	<target name="test" depends="build">
		<delete file="../freeplane_framework/build/RUNNING_PID"  failonerror="false"/>
		<exec executable="bash" dir="../freeplane_framework/build/" spawn="true">
			<arg value="silent_freeplane-server.sh"/>
		</exec>
		<echo>Waiting 5 seconds for freeplane to start...</echo>
		<sleep seconds="5"/>
		<mkdir dir="${report.dir}" />
		<junit fork="yes" printsummary="yes" haltonerror="no" haltonfailure="no" showoutput="yes" failureproperty="junit.failure">
			<test name="tests.AkkaTests" todir="${report.dir}"/>
			<formatter type="xml"/>
			<classpath refid="freeplane_plugin_remote_server_tests.classpath" />
		</junit>
		<echo>Finished tests. Killing freeplane...</echo>
		<loadfile property="pid" srcFile="../freeplane_framework/build/RUNNING_PID"/>
     	<echo>PID = ${pid}</echo>
		<exec executable="taskkill" osfamily="winnt">
			<arg value="/F"/>
			<arg value="/PID"/>
			<arg value="${pid}"/>
		</exec>
		<exec executable="kill" osfamily="unix">
			<arg value="-9"/>
			<arg value="${pid}"/>
		</exec>
		<echo>Killed freeplane.</echo>
		<fail if="junit.failure" message="Unit test(s) failed.  See reports!"/>
	</target>
	
	<target name="junitreport">
		<junitreport todir="${report.dir}">
			<fileset dir="${report.dir}" includes="TEST-*.xml" />
			<report todir="${report.dir}" />
		</junitreport>
	</target>	
</project>
